--- openbabel-2.3.90/scripts/openbabel-java.i.orig	2015-09-22 12:38:01.000000000 +0200
+++ openbabel-2.3.90/scripts/openbabel-java.i	2015-11-16 19:43:52.950908988 +0100
@@ -233,7 +233,6 @@
 %warnfilter(516) OpenBabel::SpaceGroup; // Ignoring std::string methods in favour of char* ones
 %include <openbabel/math/spacegroup.h>
 
-# CloneData should be used instead of the following method
 %ignore OpenBabel::OBBase::SetData;
 %ignore OpenBabel::OBBase::GetData(char const *);
 %ignore OpenBabel::OBBase::HasData(char const *);
@@ -313,7 +312,6 @@
 %ignore OpenBabel::OBForceField::DiverseConfGen;
 #endif
 
-# Ignore shadowed methods
 %ignore OpenBabel::OBForceField::VectorSubtract(const double *const, const double *const, double *);
 %ignore OpenBabel::OBForceField::VectorMultiply(const double *const, const double, double *);
 %warnfilter(516) OpenBabel::OBForceField; // Ignoring std::string methods in favour of char* ones
@@ -331,21 +329,12 @@
 
 %warnfilter(503) OpenBabel::OBBitVec; // Not wrapping any of the overloaded operators
 %include <openbabel/bitvec.h>
-# Ignore shadowed method
 %ignore OpenBabel::OBRotor::GetRotAtoms() const;
 %include <openbabel/rotor.h>
 %ignore OpenBabel::Swab;
 %include <openbabel/rotamer.h>
 %include <openbabel/spectrophore.h>
 
-# The following %ignores avoid warning messages due to shadowed classes.
-# This does not imply a loss of functionality as (in this case)
-# the shadowed class is identical (from the point of view of SWIG) to
-# the shadowing class.
-# This is because C++ references (&) are transformed by SWIG back into
-# pointers, so that OBAtomIter(OBMol &) would be treated the same as
-# OBAtomIter(OBMol *).
-
 %ignore OBAtomAtomIter(OBAtom &);
 %ignore OBAtomBondIter(OBAtom &);
 %ignore OBMolAngleIter(OBMol &);
